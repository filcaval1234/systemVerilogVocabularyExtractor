/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wordKeysSystemVerilog;

/**
 *
 * @author ifcardio
 */
public class WordKeys {
    private String wordKeys;
    private String[] wordKeysList;
    
    public WordKeys(){
        this.wordKeys = "`include\n" +
            "alias\n" +
            "always\n" +
            "always_comb\n" +
            "always_ff\n" +
            "always_latch\n" +
            "and\n" +
            "assert\n" +
            "assign\n" +
            "assume\n" +
            "automatic\n" +
            "before\n" +
            "begin\n" +
            "bind\n" +
            "bins\n" +
            "binsof\n" +
            "bit\n" +
            "break\n" +
            "buf\n" +
            "bufif0\n" +
            "bufif1\n" +
            "byte\n" +
            "case\n" +
            "casex\n" +
            "casez\n" +
            "cell\n" +
            "chandle\n" +
            "class\n" +
            "clocking\n" +
            "cmos\n" +
            "config\n" +
            "const\n" +
            "constraint\n" +
            "context\n" +
            "continue\n" +
            "cover\n" +
            "covergroup\n" +
            "coverpoint\n" +
            "cross\n" +
            "deassign\n" +
            "default\n" +
            "defparam\n" +
            "design\n" +
            "disable\n" +
            "dist\n" +
            "do\n" +
            "edge\n" +
            "else\n" +
            "end\n" +
            "endcase\n" +
            "endclass\n" +
            "endclocking\n" +
            "endconfig\n" +
            "endfunction\n" +
            "endgenerate\n" +
            "endgroup\n" +
            "endinterface\n" +
            "endmodule\n" +
            "endpackage\n" +
            "endprimitive\n" +
            "endprogram\n" +
            "endproperty\n" +
            "endspecify\n" +
            "endsequence\n" +
            "endtable\n" +
            "endtask\n" +
            "enum\n" +
            "event\n" +
            "expect\n" +
            "export\n" +
            "extends\n" +
            "extern\n" +
            "final\n" +
            "first_match\n" +
            "for\n" +
            "force\n" +
            "foreach\n" +
            "forever\n" +
            "fork\n" +
            "forkjoin\n" +
            "function\n" +
            "generate\n" +
            "genvar\n" +
            "highz0\n" +
            "highz1\n" +
            "if\n" +
            "iff\n" +
            "ifnone\n" +
            "ignore_bins\n" +
            "illegal_bins\n" +
            "import\n" +
            "incdir\n" +
            "include\n" +
            "initial\n" +
            "inout\n" +
            "input\n" +
            "inside\n" +
            "instance\n" +
            "int\n" +
            "integer\n" +
            "interface\n" +
            "intersect\n" +
            "join\n" +
            "join_any\n" +
            "join_none\n" +
            "large\n" +
            "liblist\n" +
            "library\n" +
            "local\n" +
            "localparam\n" +
            "logic\n" +
            "longint\n" +
            "macromodule\n" +
            "matches\n" +
            "medium\n" +
            "modport\n" +
            "module\n" +
            "nand\n" +
            "negedge\n" +
            "new\n" +
            "nmos\n" +
            "nor\n" +
            "noshowcancelled\n" +
            "not\n" +
            "notif0\n" +
            "notif1\n" +
            "null\n" +
            "or\n" +
            "output\n" +
            "package\n" +
            "packed\n" +
            "parameter\n" +
            "pmos\n" +
            "posedge\n" +
            "primitive\n" +
            "priority\n" +
            "program\n" +
            "property\n" +
            "protected\n" +
            "pull0\n" +
            "pull1\n" +
            "pulldown\n" +
            "pullup\n" +
            "pulsestyle_onevent\n" +
            "pulsestyle_ondetect\n" +
            "pure\n" +
            "rand\n" +
            "randc\n" +
            "randcase\n" +
            "randsequence\n" +
            "rcmos\n" +
            "real\n" +
            "realtime\n" +
            "ref\n" +
            "reg\n" +
            "release\n" +
            "repeat\n" +
            "return\n" +
            "rnmos\n" +
            "rpmos\n" +
            "rtran\n" +
            "rtranif0\n" +
            "rtranif1\n" +
            "scalared\n" +
            "sequence\n" +
            "shortint\n" +
            "shortreal\n" +
            "showcancelled\n" +
            "signed\n" +
            "small\n" +
            "solve\n" +
            "specify\n" +
            "specparam\n" +
            "static\n" +
            "string\n" +
            "strong0\n" +
            "strong1\n" +
            "struct\n" +
            "super\n" +
            "supply0\n" +
            "supply1\n" +
            "table\n" +
            "tagged\n" +
            "task\n" +
            "this\n" +
            "throughout\n" +
            "time\n" +
            "timeprecision\n" +
            "timeunit\n" +
            "tran\n" +
            "tranif0\n" +
            "tranif1\n" +
            "tri\n" +
            "tri0\n" +
            "tri1\n" +
            "triand\n" +
            "trior\n" +
            "trireg\n" +
            "type\n" +
            "typedef\n" +
            "union\n" +
            "unique\n" +
            "unsigned\n" +
            "use\n" +
            "uwire\n" +
            "var\n" +
            "vectored\n" +
            "virtual\n" +
            "void\n" +
            "wait\n" +
            "wait_order\n" +
            "wand\n" +
            "weak0\n" +
            "weak1\n" +
            "while\n" +
            "wildcard\n" +
            "wire\n" +
            "with\n" +
            "within\n" +
            "wor\n" +
            "xnor\n" +
            "xor";
        this.wordKeysList = this.wordKeys.split("\n");
    }
    public String[] getWordKeysList(){
        return this.wordKeysList;
    }   
}